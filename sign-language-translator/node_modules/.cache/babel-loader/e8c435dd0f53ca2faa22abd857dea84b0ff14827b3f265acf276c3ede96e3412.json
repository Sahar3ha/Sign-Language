{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mediapipe\\\\sign-language-translator\\\\src\\\\Pages\\\\VideoRecon.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst VideoRecognition = () => {\n  _s();\n  const [gesture, setGesture] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [lastRecognitionTime, setLastRecognitionTime] = useState(Date.now());\n  useEffect(() => {\n    canvasRef.current = document.createElement('canvas');\n\n    // Function to start the video stream\n    const startVideo = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('Error accessing webcam:', error);\n      }\n    };\n    startVideo();\n\n    // Function to send frames to the server\n    const sendFrame = () => {\n      const video = videoRef.current;\n      if (!video) return;\n      const canvas = canvasRef.current;\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const context = canvas.getContext('2d');\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const dataUrl = canvas.toDataURL('image/jpeg');\n      socket.emit('frame', dataUrl);\n    };\n    const interval = setInterval(sendFrame, 1000); // Adjust the interval as needed\n    return () => {\n      clearInterval(interval);\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  useEffect(() => {\n    // Socket event listeners\n    socket.on('prediction', data => {\n      const currentTime = Date.now();\n      if (data.gesture) {\n        setGesture(data.gesture);\n        setMessages(prevMessages => [...prevMessages, data.gesture]);\n        setLastRecognitionTime(currentTime); // Update the last recognition time\n      } else if (data.error) {\n        console.error('Error:', data.error);\n      }\n\n      // Show \"unrecognized\" if no gesture has been recognized for 10 seconds\n      if (currentTime - lastRecognitionTime > 10000) {\n        setGesture('unrecognized');\n        setMessages(prevMessages => [...prevMessages, 'unrecognized']);\n      }\n    });\n    return () => {\n      socket.off('prediction');\n    };\n  }, [lastRecognitionTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-1/2\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"w-full h-full object-cover\",\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), gesture && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-0 left-0 bg-yellow-100 p-4 rounded-lg m-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: [\"Predicted Gesture: \", gesture]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 bg-gray-100 p-4 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-4\",\n        children: \"Gesture Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoRecognition, \"/5kgXCQSWAVuKpNp0GC/hgJ+l9I=\");\n_c = VideoRecognition;\nexport default VideoRecognition;\nvar _c;\n$RefreshReg$(_c, \"VideoRecognition\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","Chat","jsxDEV","_jsxDEV","socket","VideoRecognition","_s","gesture","setGesture","messages","setMessages","videoRef","canvasRef","lastRecognitionTime","setLastRecognitionTime","Date","now","current","document","createElement","startVideo","stream","navigator","mediaDevices","getUserMedia","video","srcObject","error","console","sendFrame","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","dataUrl","toDataURL","emit","interval","setInterval","clearInterval","getTracks","forEach","track","stop","on","data","currentTime","prevMessages","off","className","children","ref","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Mediapipe/sign-language-translator/src/Pages/VideoRecon.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Chat from './Chat';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst VideoRecognition = () => {\r\n  const [gesture, setGesture] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [lastRecognitionTime, setLastRecognitionTime] = useState(Date.now());\r\n\r\n  useEffect(() => {\r\n    canvasRef.current = document.createElement('canvas');\r\n\r\n    // Function to start the video stream\r\n    const startVideo = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error accessing webcam:', error);\r\n      }\r\n    };\r\n    startVideo();\r\n\r\n    // Function to send frames to the server\r\n    const sendFrame = () => {\r\n      const video = videoRef.current;\r\n      if (!video) return;\r\n\r\n      const canvas = canvasRef.current;\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const context = canvas.getContext('2d');\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      const dataUrl = canvas.toDataURL('image/jpeg');\r\n\r\n      socket.emit('frame', dataUrl);\r\n    };\r\n\r\n    const interval = setInterval(sendFrame, 1000); // Adjust the interval as needed\r\n    return () => {\r\n      clearInterval(interval);\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Socket event listeners\r\n    socket.on('prediction', data => {\r\n      const currentTime = Date.now();\r\n      \r\n      if (data.gesture) {\r\n        setGesture(data.gesture);\r\n        setMessages(prevMessages => [...prevMessages, data.gesture]);\r\n        setLastRecognitionTime(currentTime); // Update the last recognition time\r\n      } else if (data.error) {\r\n        console.error('Error:', data.error);\r\n      }\r\n\r\n      // Show \"unrecognized\" if no gesture has been recognized for 10 seconds\r\n      if (currentTime - lastRecognitionTime > 10000) {\r\n        setGesture('unrecognized');\r\n        setMessages(prevMessages => [...prevMessages, 'unrecognized']);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('prediction');\r\n    };\r\n  }, [lastRecognitionTime]);\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"relative w-1/2\">\r\n        <video ref={videoRef} className=\"w-full h-full object-cover\" autoPlay playsInline></video>\r\n        {gesture && (\r\n          <div className=\"absolute bottom-0 left-0 bg-yellow-100 p-4 rounded-lg m-4\">\r\n            <h2 className=\"text-xl font-bold\">Predicted Gesture: {gesture}</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"w-1/2 bg-gray-100 p-4 overflow-y-auto\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">Gesture Chat</h1>\r\n        <Chat messages={messages} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoRecognition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}