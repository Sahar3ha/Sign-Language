{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mediapipe\\\\sign-language-translator\\\\src\\\\Pages\\\\VoiceRecon.jsx\",\n  _s = $RefreshSig$();\n// VoiceRecognition.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecognition = () => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [recognizedGesture, setRecognizedGesture] = useState('');\n  const handleListen = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Your browser does not support speech recognition. Please try Chrome.');\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.onresult = event => {\n      let finalTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          finalTranscript += event.results[i][0].transcript;\n        }\n      }\n      setTranscript(finalTranscript);\n    };\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n    }\n    recognition.onend = () => {\n      if (transcript !== '') {\n        setMessages(prevMessages => [...prevMessages, transcript]);\n        sendTextToBackend(transcript);\n      }\n      setIsListening(false);\n    };\n  };\n  useEffect(() => {\n    if (transcript !== '') {\n      setMessages(prevMessages => [...prevMessages, transcript]);\n      sendTextToBackend(transcript);\n      setTranscript('');\n    }\n  }, [transcript]);\n  const sendTextToBackend = async text => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/voice_recognition', {\n        text\n      });\n      setRecognizedGesture(response.data.gesture);\n    } catch (error) {\n      console.error('Error sending text to backend:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Real-Time Voice Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleListen,\n      className: `py-2 px-4 rounded-lg mt-4 ${isListening ? 'bg-red-500' : 'bg-blue-500'} text-white`,\n      children: isListening ? 'Stop Listening' : 'Start Listening'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 w-2/3 p-4 bg-gray-100 rounded-lg max-h-screen overflow-y-auto\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-500 text-white py-2 px-4 rounded-lg mb-2 text-right\",\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), recognizedGesture && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-yellow-100 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"Recognized Gesture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/static/${recognizedGesture}.png`,\n        alt: \"Recognized Gesture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceRecognition, \"LOBOHpGrSdDKHLwZ41x1da3tWOE=\");\n_c = VoiceRecognition;\nexport default VoiceRecognition;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecognition\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","VoiceRecognition","_s","transcript","setTranscript","isListening","setIsListening","messages","setMessages","recognizedGesture","setRecognizedGesture","handleListen","window","alert","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onend","onresult","event","finalTranscript","i","resultIndex","results","length","isFinal","stop","start","prevMessages","sendTextToBackend","text","response","post","data","gesture","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Mediapipe/sign-language-translator/src/Pages/VoiceRecon.jsx"],"sourcesContent":["// VoiceRecognition.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst VoiceRecognition = () => {\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [recognizedGesture, setRecognizedGesture] = useState('');\r\n\r\n  const handleListen = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Your browser does not support speech recognition. Please try Chrome.');\r\n      return;\r\n    }\r\n\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'en-US';\r\n\r\n    recognition.onstart = () => {\r\n      setIsListening(true);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onresult = (event) => {\r\n      let finalTranscript = '';\r\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n        if (event.results[i].isFinal) {\r\n          finalTranscript += event.results[i][0].transcript;\r\n        }\r\n      }\r\n      setTranscript(finalTranscript);\r\n    };\r\n\r\n    if (isListening) {\r\n      recognition.stop();\r\n    } else {\r\n      recognition.start();\r\n    }\r\n\r\n    recognition.onend = () => {\r\n      if (transcript !== '') {\r\n        setMessages((prevMessages) => [...prevMessages, transcript]);\r\n        sendTextToBackend(transcript);\r\n      }\r\n      setIsListening(false);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (transcript !== '') {\r\n      setMessages((prevMessages) => [...prevMessages, transcript]);\r\n      sendTextToBackend(transcript);\r\n      setTranscript('');\r\n    }\r\n  }, [transcript]);\r\n\r\n  const sendTextToBackend = async (text) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/voice_recognition', { text });\r\n      setRecognizedGesture(response.data.gesture);\r\n    } catch (error) {\r\n      console.error('Error sending text to backend:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center mt-12\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Real-Time Voice Recognition</h1>\r\n      <button\r\n        onClick={handleListen}\r\n        className={`py-2 px-4 rounded-lg mt-4 ${isListening ? 'bg-red-500' : 'bg-blue-500'} text-white`}\r\n      >\r\n        {isListening ? 'Stop Listening' : 'Start Listening'}\r\n      </button>\r\n      <div className=\"mt-4 w-2/3 p-4 bg-gray-100 rounded-lg max-h-screen overflow-y-auto\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className=\"bg-green-500 text-white py-2 px-4 rounded-lg mb-2 text-right\">\r\n            {message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {recognizedGesture && (\r\n        <div className=\"mt-4 p-4 bg-yellow-100 rounded-lg\">\r\n          <h2 className=\"text-xl font-bold mb-2\">Recognized Gesture</h2>\r\n          <img src={`http://localhost:5000/static/${recognizedGesture}.png`} alt=\"Recognized Gesture\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceRecognition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}