{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mediapipe\\\\sign-language-translator\\\\src\\\\Pages\\\\VoiceRecon.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecognition = () => {\n  _s();\n  const [inputTexts, setInputTexts] = useState([]);\n  const [gestureImages, setGestureImages] = useState([]);\n  const [isListening, setIsListening] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const handleListen = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Your browser does not support speech recognition. Please try Chrome.');\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.onresult = async event => {\n      let finalTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          finalTranscript += event.results[i][0].transcript;\n        }\n      }\n      finalTranscript = finalTranscript.trim().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]+$/, '');\n      if (finalTranscript) {\n        setMessages(prevMessages => [...prevMessages, finalTranscript]);\n        setInputTexts(prevInputs => [...prevInputs, finalTranscript]);\n        await sendTextToBackend(finalTranscript);\n      }\n    };\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n    }\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n  };\n  const sendTextToBackend = async text => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/text_to_image', {\n        text\n      });\n      const gesture = response.data.gesture;\n      const imagePath = `http://localhost:5000/gesture_images/${gesture}`;\n      setGestureImages(prevImages => [...prevImages, imagePath]);\n    } catch (error) {\n      console.error('Error fetching gesture image:', error);\n      alert('No gesture found for the provided text.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Voice to Sign Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleListen,\n      className: `py-2 px-4 rounded-lg mt-4 ${isListening ? 'bg-red-500' : 'bg-blue-500'} text-white`,\n      children: isListening ? 'Stop Listening' : 'Start Listening'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 w-2/3 p-4 bg-gray-100 rounded-lg max-h-screen overflow-y-auto\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-500 text-white py-2 px-4 rounded-lg mb-2 text-right\",\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), gestureImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-yellow-100 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"Recognized Gestures\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), gestureImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Recognized Gesture ${index + 1}`,\n        className: \"mb-2\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceRecognition, \"fKGzgFyNHZPlStL1NhDHM5OixgM=\");\n_c = VoiceRecognition;\nexport default VoiceRecognition;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecognition\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VoiceRecognition","_s","inputTexts","setInputTexts","gestureImages","setGestureImages","isListening","setIsListening","messages","setMessages","handleListen","window","alert","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onend","onresult","event","finalTranscript","i","resultIndex","results","length","isFinal","transcript","trim","replace","prevMessages","prevInputs","sendTextToBackend","stop","start","text","response","post","gesture","data","imagePath","prevImages","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","index","image","src","alt","_c","$RefreshReg$"],"sources":["C:/Mediapipe/sign-language-translator/src/Pages/VoiceRecon.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst VoiceRecognition = () => {\r\n  const [inputTexts, setInputTexts] = useState([]);\r\n  const [gestureImages, setGestureImages] = useState([]);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleListen = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Your browser does not support speech recognition. Please try Chrome.');\r\n      return;\r\n    }\r\n\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'en-US';\r\n\r\n    recognition.onstart = () => {\r\n      setIsListening(true);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onresult = async (event) => {\r\n      let finalTranscript = '';\r\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n        if (event.results[i].isFinal) {\r\n          finalTranscript += event.results[i][0].transcript;\r\n        }\r\n      }\r\n\r\n      finalTranscript = finalTranscript.trim().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]+$/, '');\r\n\r\n      if (finalTranscript) {\r\n        setMessages((prevMessages) => [...prevMessages, finalTranscript]);\r\n        setInputTexts((prevInputs) => [...prevInputs, finalTranscript]);\r\n        await sendTextToBackend(finalTranscript);\r\n      }\r\n    };\r\n\r\n    if (isListening) {\r\n      recognition.stop();\r\n    } else {\r\n      recognition.start();\r\n    }\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n  };\r\n\r\n  const sendTextToBackend = async (text) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/text_to_image', { text });\r\n      const gesture = response.data.gesture;\r\n      const imagePath = `http://localhost:5000/gesture_images/${gesture}`;\r\n      setGestureImages((prevImages) => [...prevImages, imagePath]);\r\n    } catch (error) {\r\n      console.error('Error fetching gesture image:', error);\r\n      alert('No gesture found for the provided text.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center mt-12\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Voice to Sign Recognition</h1>\r\n      <button\r\n        onClick={handleListen}\r\n        className={`py-2 px-4 rounded-lg mt-4 ${isListening ? 'bg-red-500' : 'bg-blue-500'} text-white`}\r\n      >\r\n        {isListening ? 'Stop Listening' : 'Start Listening'}\r\n      </button>\r\n      <div className=\"mt-4 w-2/3 p-4 bg-gray-100 rounded-lg max-h-screen overflow-y-auto\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className=\"bg-green-500 text-white py-2 px-4 rounded-lg mb-2 text-right\">\r\n            {message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {gestureImages.length > 0 && (\r\n        <div className=\"mt-4 p-4 bg-yellow-100 rounded-lg\">\r\n          <h2 className=\"text-xl font-bold mb-2\">Recognized Gestures</h2>\r\n          {gestureImages.map((image, index) => (\r\n            <img key={index} src={image} alt={`Recognized Gesture ${index + 1}`} className=\"mb-2\" />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceRecognition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}