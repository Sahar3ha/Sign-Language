{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mediapipe\\\\sign-language-translator\\\\src\\\\Pages\\\\VoiceRecon.jsx\",\n  _s = $RefreshSig$();\n// VoiceRecognition.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecognition = () => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const handleListen = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Your browser does not support speech recognition. Please try Chrome.');\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.onresult = event => {\n      let finalTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          finalTranscript += event.results[i][0].transcript;\n        }\n      }\n      setTranscript(finalTranscript);\n    };\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n    }\n    recognition.onend = () => {\n      if (finalTranscript !== '') {\n        setMessages(prevMessages => [...prevMessages, finalTranscript]);\n      }\n      setIsListening(false);\n    };\n  };\n  useEffect(() => {\n    if (transcript !== '') {\n      setMessages(prevMessages => [...prevMessages, transcript]);\n      setTranscript('');\n    }\n  }, [transcript]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Real-Time Voice Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleListen,\n      className: `py-2 px-4 rounded-lg mt-4 ${isListening ? 'bg-red-500' : 'bg-blue-500'} text-white`,\n      children: isListening ? 'Stop Listening' : 'Start Listening'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 w-2/3 p-4 bg-gray-100 rounded-lg max-h-screen overflow-y-auto\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-500 text-white py-2 px-4 rounded-lg mb-2 text-right\",\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceRecognition, \"K7/3C7eTaoH5M7elOvnLVNkwC78=\");\n_c = VoiceRecognition;\nexport default VoiceRecognition;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecognition\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VoiceRecognition","_s","transcript","setTranscript","isListening","setIsListening","messages","setMessages","handleListen","window","alert","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onend","onresult","event","finalTranscript","i","resultIndex","results","length","isFinal","stop","start","prevMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","index","_c","$RefreshReg$"],"sources":["C:/Mediapipe/sign-language-translator/src/Pages/VoiceRecon.jsx"],"sourcesContent":["// VoiceRecognition.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst VoiceRecognition = () => {\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleListen = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Your browser does not support speech recognition. Please try Chrome.');\r\n      return;\r\n    }\r\n\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'en-US';\r\n\r\n    recognition.onstart = () => {\r\n      setIsListening(true);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onresult = (event) => {\r\n      let finalTranscript = '';\r\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n        if (event.results[i].isFinal) {\r\n          finalTranscript += event.results[i][0].transcript;\r\n        }\r\n      }\r\n      setTranscript(finalTranscript);\r\n    };\r\n\r\n    if (isListening) {\r\n      recognition.stop();\r\n    } else {\r\n      recognition.start();\r\n    }\r\n\r\n    recognition.onend = () => {\r\n      if (finalTranscript !== '') {\r\n        setMessages((prevMessages) => [...prevMessages, finalTranscript]);\r\n      }\r\n      setIsListening(false);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (transcript !== '') {\r\n      setMessages((prevMessages) => [...prevMessages, transcript]);\r\n      setTranscript('');\r\n    }\r\n  }, [transcript]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center mt-12\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Real-Time Voice Recognition</h1>\r\n      <button\r\n        onClick={handleListen}\r\n        className={`py-2 px-4 rounded-lg mt-4 ${isListening ? 'bg-red-500' : 'bg-blue-500'} text-white`}\r\n      >\r\n        {isListening ? 'Stop Listening' : 'Start Listening'}\r\n      </button>\r\n      <div className=\"mt-4 w-2/3 p-4 bg-gray-100 rounded-lg max-h-screen overflow-y-auto\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className=\"bg-green-500 text-white py-2 px-4 rounded-lg mb-2 text-right\">\r\n            {message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceRecognition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}