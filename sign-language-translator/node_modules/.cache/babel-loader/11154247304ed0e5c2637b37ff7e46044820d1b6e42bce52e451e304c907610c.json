{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mediapipe\\\\sign-language-translator\\\\src\\\\Pages\\\\VoiceRecon.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecognition = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [gestureImage, setGestureImage] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await sendTextToBackend(inputText);\n  };\n  const handleListen = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Your browser does not support speech recognition. Please try Chrome.');\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.onresult = event => {\n      let finalTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          finalTranscript += event.results[i][0].transcript;\n        }\n      }\n\n      // Clean up final transcript\n      finalTranscript = finalTranscript.trim().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]+$/, '');\n      setInputText(finalTranscript);\n      setMessages(prevMessages => [...prevMessages, finalTranscript]);\n      sendTextToBackend(finalTranscript);\n    };\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n    }\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n  };\n  const sendTextToBackend = async text => {\n    try {\n      console.log('Sending text to backend:', text); // Debug print\n      const response = await axios.post('http://localhost:5000/api/text_to_image', {\n        text\n      });\n      const gesture = response.data.gesture;\n      const imagePath = `http://localhost:5000/gesture_images/${gesture}`;\n      console.log('Received gesture path:', imagePath); // Debug print\n      setGestureImage(imagePath);\n    } catch (error) {\n      console.error('Error fetching gesture image:', error);\n      alert('No gesture found for the provided text.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Text to Image Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: handleInputChange,\n        placeholder: \"Enter text\",\n        className: \"border rounded-lg py-2 px-4 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"py-2 px-4 rounded-lg bg-blue-500 text-white\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleListen,\n      className: `py-2 px-4 rounded-lg mt-4 ${isListening ? 'bg-red-500' : 'bg-blue-500'} text-white`,\n      children: isListening ? 'Stop Listening' : 'Start Listening'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 w-2/3 p-4 bg-gray-100 rounded-lg max-h-screen overflow-y-auto\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-500 text-white py-2 px-4 rounded-lg mb-2 text-right\",\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), gestureImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-yellow-100 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"Recognized Gesture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gestureImage,\n        alt: \"Recognized Gesture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceRecognition, \"YOg60B4PPkCEsLrcLBLlbtNdk4A=\");\n_c = VoiceRecognition;\nexport default VoiceRecognition;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecognition\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VoiceRecognition","_s","inputText","setInputText","gestureImage","setGestureImage","isListening","setIsListening","messages","setMessages","handleInputChange","event","target","value","handleSubmit","preventDefault","sendTextToBackend","handleListen","window","alert","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onend","onresult","finalTranscript","i","resultIndex","results","length","isFinal","transcript","trim","replace","prevMessages","stop","start","text","console","log","response","post","gesture","data","imagePath","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","onClick","map","message","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Mediapipe/sign-language-translator/src/Pages/VoiceRecon.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst VoiceRecognition = () => {\r\n  const [inputText, setInputText] = useState('');\r\n  const [gestureImage, setGestureImage] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await sendTextToBackend(inputText);\r\n  };\r\n\r\n  const handleListen = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Your browser does not support speech recognition. Please try Chrome.');\r\n      return;\r\n    }\r\n\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'en-US';\r\n\r\n    recognition.onstart = () => {\r\n      setIsListening(true);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onresult = (event) => {\r\n      let finalTranscript = '';\r\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n        if (event.results[i].isFinal) {\r\n          finalTranscript += event.results[i][0].transcript;\r\n        }\r\n      }\r\n\r\n      // Clean up final transcript\r\n      finalTranscript = finalTranscript.trim().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]+$/, '');\r\n\r\n      setInputText(finalTranscript);\r\n      setMessages((prevMessages) => [...prevMessages, finalTranscript]);\r\n      sendTextToBackend(finalTranscript);\r\n    };\r\n\r\n    if (isListening) {\r\n      recognition.stop();\r\n    } else {\r\n      recognition.start();\r\n    }\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n  };\r\n\r\n  const sendTextToBackend = async (text) => {\r\n    try {\r\n      console.log('Sending text to backend:', text); // Debug print\r\n      const response = await axios.post('http://localhost:5000/api/text_to_image', { text });\r\n      const gesture = response.data.gesture;\r\n      const imagePath = `http://localhost:5000/gesture_images/${gesture}`;\r\n      console.log('Received gesture path:', imagePath); // Debug print\r\n      setGestureImage(imagePath);\r\n    } catch (error) {\r\n      console.error('Error fetching gesture image:', error);\r\n      alert('No gesture found for the provided text.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center mt-12\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Text to Image Recognition</h1>\r\n      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputText}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter text\"\r\n          className=\"border rounded-lg py-2 px-4 mr-2\"\r\n        />\r\n        <button type=\"submit\" className=\"py-2 px-4 rounded-lg bg-blue-500 text-white\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <button\r\n        onClick={handleListen}\r\n        className={`py-2 px-4 rounded-lg mt-4 ${isListening ? 'bg-red-500' : 'bg-blue-500'} text-white`}\r\n      >\r\n        {isListening ? 'Stop Listening' : 'Start Listening'}\r\n      </button>\r\n      <div className=\"mt-4 w-2/3 p-4 bg-gray-100 rounded-lg max-h-screen overflow-y-auto\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className=\"bg-green-500 text-white py-2 px-4 rounded-lg mb-2 text-right\">\r\n            {message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {gestureImage && (\r\n        <div className=\"mt-4 p-4 bg-yellow-100 rounded-lg\">\r\n          <h2 className=\"text-xl font-bold mb-2\">Recognized Gesture</h2>\r\n          <img src={gestureImage} alt=\"Recognized Gesture\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceRecognition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}