{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mediapipe\\\\sign-language-translator\\\\src\\\\Pages\\\\VideoRecon.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoRecognition = () => {\n  _s();\n  const [gesture, setGesture] = useState(null);\n  const videoRef = useRef(null);\n  useEffect(() => {\n    // Access the user's webcam\n    const startVideo = async () => {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    };\n    startVideo();\n\n    // Capture frames and recognize gestures in real-time\n    const interval = setInterval(recognizeGestureFromVideo, 1000); // Adjust the interval as needed\n    return () => clearInterval(interval); // Clean up on component unmount\n  }, []);\n  const recognizeGestureFromVideo = async () => {\n    const video = videoRef.current;\n    if (!video) return;\n    const canvas = document.createElement('canvas');\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n    const dataUrl = canvas.toDataURL('image/jpeg');\n    try {\n      const response = await axios.post('http://localhost:5000/api/recognize_gesture', {\n        image: dataUrl\n      });\n      setGesture(response.data.gesture);\n    } catch (error) {\n      console.error('Error recognizing gesture:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Real-Time Video Gesture Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"w-96 h-72 border border-gray-300 mt-4\",\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), gesture ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-6 text-lg text-gray-600\",\n      children: [\"Recognized Gesture: \", gesture]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-6 text-lg text-gray-600\",\n      children: \"Gesture will appear here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoRecognition, \"7RFzTYkFrdWWDBgjBq54oh55puM=\");\n_c = VideoRecognition;\nexport default VideoRecognition;\nvar _c;\n$RefreshReg$(_c, \"VideoRecognition\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","VideoRecognition","_s","gesture","setGesture","videoRef","startVideo","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","interval","setInterval","recognizeGestureFromVideo","clearInterval","canvas","document","createElement","width","videoWidth","height","videoHeight","getContext","drawImage","dataUrl","toDataURL","response","post","image","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["C:/Mediapipe/sign-language-translator/src/Pages/VideoRecon.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst VideoRecognition = () => {\r\n  const [gesture, setGesture] = useState(null);\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Access the user's webcam\r\n    const startVideo = async () => {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    };\r\n    startVideo();\r\n\r\n    // Capture frames and recognize gestures in real-time\r\n    const interval = setInterval(recognizeGestureFromVideo, 1000); // Adjust the interval as needed\r\n    return () => clearInterval(interval); // Clean up on component unmount\r\n  }, []);\r\n\r\n  const recognizeGestureFromVideo = async () => {\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n    \r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    const dataUrl = canvas.toDataURL('image/jpeg');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/recognize_gesture', { image: dataUrl });\r\n      setGesture(response.data.gesture);\r\n    } catch (error) {\r\n      console.error('Error recognizing gesture:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center mt-12\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Real-Time Video Gesture Recognition</h1>\r\n      <video ref={videoRef} className=\"w-96 h-72 border border-gray-300 mt-4\" autoPlay playsInline></video>\r\n      {gesture ? (\r\n        <p className=\"mt-6 text-lg text-gray-600\">Recognized Gesture: {gesture}</p>\r\n      ) : (\r\n        <p className=\"mt-6 text-lg text-gray-600\">Gesture will appear here</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoRecognition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}